{
  "_args": [
    [
      {
        "raw": "fabric-contract-api@2.0.0-snapshot.118",
        "scope": null,
        "escapedName": "fabric-contract-api",
        "name": "fabric-contract-api",
        "rawSpec": "2.0.0-snapshot.118",
        "spec": "2.0.0-snapshot.118",
        "type": "version"
      },
      "/opt/gopath/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/nodecc/sample1/node_modules/fabric-shim"
    ]
  ],
  "_from": "fabric-contract-api@2.0.0-snapshot.118",
  "_hasShrinkwrap": false,
  "_id": "fabric-contract-api@2.0.0-snapshot.118",
  "_inCache": true,
  "_location": "/fabric-contract-api",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fabric-contract-api_2.0.0-snapshot.118_1570709231949_0.7209864023861425"
  },
  "_npmUser": {
    "name": "hyperledger-ci",
    "email": "collab-it+hyp+ci@linuxfoundation.org"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fabric-contract-api@2.0.0-snapshot.118",
    "scope": null,
    "escapedName": "fabric-contract-api",
    "name": "fabric-contract-api",
    "rawSpec": "2.0.0-snapshot.118",
    "spec": "2.0.0-snapshot.118",
    "type": "version"
  },
  "_requiredBy": [
    "/fabric-shim"
  ],
  "_resolved": "https://registry.npmjs.org/fabric-contract-api/-/fabric-contract-api-2.0.0-snapshot.118.tgz",
  "_shasum": "abdcaf583c6e70722f3bb0cb4998f243e591f988",
  "_shrinkwrap": null,
  "_spec": "fabric-contract-api@2.0.0-snapshot.118",
  "_where": "/opt/gopath/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/nodecc/sample1/node_modules/fabric-shim",
  "bugs": {
    "url": "https://github.com/hyperledger/fabric-chaincode-node/issues"
  },
  "dependencies": {
    "fabric-shim-api": "2.0.0-snapshot.118",
    "fast-safe-stringify": "~2.0.7",
    "get-params": "^0.1.2",
    "reflect-metadata": "^0.1.12",
    "winston": "^3.2.1"
  },
  "description": "A node.js implementation of Hyperledger Fabric chaincode shim, to allow endorsing peers and user-provided chaincodes to communicate with each other",
  "devDependencies": {
    "ajv": "^6.5.5",
    "ajv-cli": "^3.0.0",
    "chai": "^4.1.1",
    "chai-as-promised": "^7.1.1",
    "chai-things": "^0.2.0",
    "eslint": "4.0.0",
    "gulp": "^4.0.0",
    "gulp-debug": "~4.0.0",
    "gulp-eslint": "~6.0.0",
    "mocha": "5.2.0",
    "nyc": "14.1.1",
    "rewire": "~4.0.1",
    "sinon": "~7.4.2",
    "typescript": "3.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-plLY7AEgsqHNSPoo2LLm5d7GWcJkaMO7MzHZAE8urdiMunRMTNEjUTj96imlpMCmaY2+J84dEjLjEd2HILytyg==",
    "shasum": "abdcaf583c6e70722f3bb0cb4998f243e591f988",
    "tarball": "https://registry.npmjs.org/fabric-contract-api/-/fabric-contract-api-2.0.0-snapshot.118.tgz",
    "fileCount": 51,
    "unpackedSize": 416933,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnx7wCRA9TVsSAnZWagAAU+kQAI0JJAuiPl7I84zDtZI0\nzbkYePxaYiGxsvBYv02Dm4AOLOwnOgsSi1cziz1q8xtDsJ+7vV0GBZ1a2MPV\n4AeRhM+VMAV90Qt8eMNtoUI0WANlikPJWczKtfk7cgqhx8/gww5mjPWTuejs\ndpvKbNgPlW4q8aMJUu14t66FBSftIaGM2KWyL5J2TBl3mK1Z+LlWVsoewG/g\nCPN3SC+9mtt//9IVvYmsE9mbIKRCBwaUHw/+IynHWr3SFpwjL9acc+f/wO+3\n4cJzXT3PBBG2qCZtQW+U4M38wltyVrLQQKecTDuFXoFuIWmPrAWKyDFFw/3l\n70zRNPc1IS9HENXOT7HbgAmJSQUT7r/OqR+5BEwGmFJG8ncOYVzSqlRuquqZ\nWbg4k8n+od7Lm/Vc1pXZht2U/qwcY5GkW5txRnDwkDGiCKQs5zTbTJdzDrRC\n8qBBGdtdOl4SA5V0G7uF8l8248Z0a89RYFfBJqcDWH+unc7OYHYtQSnUQGY0\nkIAizYLaO/VAcVpJvzAJfrNjaBFiIuUQZQpnoIWmrpNw9ijuvF/8Wq5MfTni\ntyOB7SlKJGpWaY524HV/7GxiMYneqgrWoqHgY0suUeCSUjlx0S39YgVZxL5z\n7bc+fqmjFzjVJuP0un4bqX9GgueWk9jB20RHtOmziKgHH9dqq1IlMzkNwlfo\nCX/C\r\n=g/qp\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": "10.15.2",
    "npm": "^6.4.1"
  },
  "homepage": "https://github.com/hyperledger/fabric-chaincode-node#readme",
  "keywords": [
    "fabric-shim",
    "Hyperledger Fabric",
    "Fabric Shim"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hyperledger-ci",
      "email": "collab-it+hyp+ci@linuxfoundation.org"
    }
  ],
  "name": "fabric-contract-api",
  "nyc": {
    "exclude": [
      "coverage/**",
      "test/**",
      "gulpfile.js"
    ],
    "reporter": [
      "text-summary",
      "html",
      "cobertura"
    ],
    "all": true,
    "check-coverage": true,
    "statements": 100,
    "branches": 100,
    "functions": 100,
    "lines": 100
  },
  "optionalDependencies": {},
  "readme": "[![NPM](https://nodei.co/npm/fabric-contract-api.svg?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/fabric-contract-api/)\n[![NPM](https://nodei.co/npm/fabric-shim.svg?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/fabric-shim/)\n\n\n[![Version](https://badge.fury.io/js/fabric-shim.svg)](http://badge.fury.io/js/fabric-shim) [![Build Status](https://jenkins.hyperledger.org/buildStatus/icon?job=fabric-chaincode-node-merge-x86_64)](https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64)\n\nThe `fabric-contract-api` provides the *contract interface*  a high level API for application developers to implement [Smart Contracts](https://hyperledger-fabric.readthedocs.io/en/latest/glossary.html#smart-contract). Working with this API provides a high level entry point to writing business logic.\n\nWithin Hyperledger Fabric, Smart Contracts can also be referred to as [Chaincode](https://hyperledger-fabric.readthedocs.io/en/latest/glossary.html#chaincode).  To be more specific, the term chaincode is preferred to be used to refer to the overall container that is hosting the contracts.\n\nThe `fabric-shim` provides the *chaincode interface*, a lower level API for implementing \"Smart Contracts\". It also _currently_ provides the implementation to support communication with Hyperledger Fabric peers for Smart Contracts written using the `fabric-contract-api`.  To confirm that this is the same as the `fabric-shim` in previous versions of Hyperledger Fabric.\n\nDetailed explanation on the concept and programming model can be found here: [http://hyperledger-fabric.readthedocs.io/en/latest/chaincode.html](http://hyperledger-fabric.readthedocs.io/en/latest/chaincode.html).\n\n## Contract Interface\n\n### Installation\n\n```sh\nnpm install --save fabric-contract-api\n```\n\n### Usage\n\nImplement a class that ends the `contract` class, a constructor is needed.\nThe other functions will be invokable functions of your Smart Contract\n\n```javascript\n// updatevalues.js\n'use strict';\n\n// SDK Library to asset with writing the logic\nconst { Contract } = require('fabric-contract-api');\n\n// Business logic (well just util but still it's general purpose logic)\nconst util = require('util');\n\n/**\n * Support the Updating of values within the SmartContract\n */\nclass UpdateValuesContract extends Contract\n\n  constructor(){\n\t   \tsuper('UpdateValuesContract');\n\t}\n\n\tasync transactionA(ctx, newValue) {\n\t\t// retrieve existing chaincode states\n\t\tlet oldValue = await ctx.stub.getState(key);\n\n\t\tawait ctx.stub.putState(key, Buffer.from(newValue));\n\n\t\treturn Buffer.from(newValue.toString());\n\t}\n\n\tasync transactionB(ctx) {\n\t  //  .....\n\t}\n\n};\n\nmodule.exports = UpdateValuesContract\n```\n\nAs with standard node modules make sure that this class is exported as follows.\n```javascript\n// index.js\n'use strict';\n\nconst UpdateValues = require('./updatevalues')\nmodule.exports.contracts = [UpdateValues];\n```\n\n**Note:** In order to make this contract 'runnable' you must also install the `fabric-shim` module as below, and ensure that the 'start' script in `package.json` refers to `fabric-chaincode-node start`\n\n```json\n  \"scripts\": {\n   \t\"start\": \"fabric-chaincode-node start\"\n  }\n```\n\nThe `fabric-shim` provides the `fabric-chaincode-node` commands; this can also be used to create a skelton metadata file. \n\n## Chaincode Interface\n\n### Installation\n```sh\nnpm install --save fabric-shim\n```\n\n### Usage\nThe [chaincode interface](https://fabric-shim.github.io/ChaincodeInterface.html) contains two methods to be implemented:\n```javascript\nconst shim = require('fabric-shim');\n\nconst Chaincode = class {\n\tasync Init(stub) {\n\t\t// use the instantiate input arguments to decide initial chaincode state values\n\n\t\t// save the initial states\n\t\tawait stub.putState(key, Buffer.from(aStringValue));\n\n\t\treturn shim.success(Buffer.from('Initialized Successfully!'));\n\t}\n\n\tasync Invoke(stub) {\n\t\t// use the invoke input arguments to decide intended changes\n\n\t\t// retrieve existing chaincode states\n\t\tlet oldValue = await stub.getState(key);\n\n\t\t// calculate new state values and saves them\n\t\tlet newValue = oldValue + delta;\n\t\tawait stub.putState(key, Buffer.from(newValue));\n\n\t\treturn shim.success(Buffer.from(newValue.toString()));\n\t}\n};\n```\n\nStart the chaincode process and listen for incoming endorsement requests:\n```javascript\nshim.start(new Chaincode());\n```\n\n### API Reference\nVisit [fabric-shim.github.io](https://fabric-shim.github.io/) and click on \"Classes\" link in the navigation bar on the top to view the list of class APIs.\n\n\n\n## Support\nTested with node.js 8.9, and also the v10 LTS release.\n\n## License\n\nThis package is distributed under the\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0),\nsee LICENSE.txt for more information.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hyperledger/fabric-chaincode-node.git"
  },
  "scripts": {
    "build": "npm run lint && npm run test:unit && npm run test:schema",
    "buildt": "tsc --project test/typescript",
    "lint": "eslint ./lib/",
    "test": "nyc mocha --recursive 'test/unit/**/*.js'",
    "test:schema": "ajv compile -s ./schema/contract-schema.json && ajv validate -s ./schema/contract-schema.json -d ./schema/example-full.json",
    "test:unit": "npm run test"
  },
  "tag": "unstable",
  "types": "./types/index.d.ts",
  "version": "2.0.0-snapshot.118",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "10.15.2",
        "npm": "^6.4.1"
      },
      "pkgid": "fabric-contract-api@2.0.0-snapshot.118"
    }
  ]
}
